[gd_scene load_steps=5 format=3 uid="uid://f1vvoqdrimh7"]

[ext_resource type="PackedScene" uid="uid://cpd7eamcb24bf" path="res://gauge.tscn" id="1_lq88f"]
[ext_resource type="Texture2D" uid="uid://cey74pidop5xu" path="res://circle 128p.png" id="1_yikqb"]

[sub_resource type="GDScript" id="GDScript_eu11m"]
resource_name = "main"
script/source = "extends Node2D
const DEFAULT_SIZE = Vector2i(128,128)
var config: ConfigFile = ConfigFile.new()
var error = config.load(\"res://config.cfg\") # == OK:
@onready var window: Window = get_window()
enum Modes { WATCH, POMODORO, TIMER }
@export var Mode: Modes
@export var Gauges: Array[Node]
@onready var seconds: int = config.get_value(\"time\", \"seconds\", 0)
#signal on_window_changed
signal second_passed


func _ready():
	Engine.max_fps = 1
	window.position = config.get_value(\"window\", \"position\", Vector2i(1700,900))
	window.size = config.get_value(\"window\", \"size\", DEFAULT_SIZE)
	for gauge in Gauges:
		second_passed.connect(gauge.update)


func _process(_delta):
	seconds += 1
	second_passed.emit(seconds)
	if seconds%60==0: 
		config.set_value(\"time\", \"seconds\", seconds)
		config.save(\"config.cfg\")


func save_cfg():
	config.set_value( \"window\", \"position\", window.position)
	config.set_value( \"window\", \"size\", window.size)
	config.save(\"config.cfg\")
	print(\"config saved\")


func _on_drag_button_button_down():
	set_process(false)
	Engine.max_fps = 60


func _on_drag_button_button_up():
	set_process(true)
	Engine.max_fps = 1
"

[sub_resource type="GDScript" id="GDScript_xqv6w"]
resource_name = "drag_button"
script/source = "extends Button
var state: int
enum { IS_DRAGGING, IS_RESIZING }
var drag_offset: Vector2i
var init_center: Vector2i
var init_distance: float
var init_size: Vector2i
@onready var win: Window = get_window()
@export var drag_node: Node


func _ready():
	set_process_input(false)


func _input(event):
	if not event is InputEventMouseMotion: return
	if not is_pressed(): return
	var mouse_pos: Vector2i = DisplayServer.mouse_get_position()
	if state == IS_DRAGGING:
		win.position = mouse_pos - drag_offset
	elif state == IS_RESIZING:
		var distance: float = ( mouse_pos - init_center ).length()
		win.size = init_size * ( distance / init_distance )
		var center = win.position + ( win.size / 2 )
		win.position -= center - init_center
		print( [ init_distance, distance, init_size, win.size, init_center, center ] )


func _on_button_down():
	var mouse_pos: Vector2i = DisplayServer.mouse_get_position()
	init_center = win.position + win.size / 2
	init_distance = ( mouse_pos - init_center ).length()
	if init_distance < drag_node.get_rect().size.x * 0.5 * drag_node.scale.x:
		print(\"drag start\")
		state = IS_DRAGGING
		drag_offset = mouse_pos - win.position
	else:
		print(\"resizing start\")
		state = IS_RESIZING
		init_size = win.size


func _on_button_up():
	print(\"drag/resizing end\")
	Engine.max_fps = 10


func _on_mouse_entered():
	set_process_input(true)
	Engine.max_fps = 10
	print(\"mouse entered\")


func _on_mouse_exited():
	set_process_input(false)
	Engine.max_fps = 1
	print(\"mouse exited\")
"

[node name="Main" type="Node2D" node_paths=PackedStringArray("Gauges")]
script = SubResource("GDScript_eu11m")
Gauges = [NodePath("gauge 10m"), NodePath("gauge 90m"), NodePath("gauge 6h")]

[node name="text separator" type="Marker2D" parent="."]
z_index = 6
z_as_relative = false
position = Vector2(68, 61)

[node name="gauge 10m" parent="." node_paths=PackedStringArray("anchor") instance=ExtResource("1_lq88f")]
MAX_VALUE = 600
hor_side = 1
anchor = NodePath("../text separator")
use_gradient = true

[node name="gauge 90m" parent="." node_paths=PackedStringArray("anchor") instance=ExtResource("1_lq88f")]
offset_left = 8.0
offset_top = 8.0
offset_right = 136.0
offset_bottom = 136.0
scale = Vector2(0.875, 0.875)
MAX_VALUE = 90
time_unit = 1
hor_side = 1
ver_side = 1
text_size = 16
anchor = NodePath("../text separator")
use_gradient = true

[node name="gauge 6h" parent="." node_paths=PackedStringArray("anchor") instance=ExtResource("1_lq88f")]
offset_left = 24.0
offset_top = 24.0
offset_right = 152.0
offset_bottom = 152.0
scale = Vector2(0.625, 0.625)
MAX_VALUE = 6
time_unit = 2
ver_side = 2
text_size = 34
anchor = NodePath("../text separator")
use_gradient = true

[node name="Circle128p" type="Sprite2D" parent="."]
modulate = Color(0, 0, 0, 1)
z_index = -1
position = Vector2(64, 64)
scale = Vector2(0.5, 0.5)
texture = ExtResource("1_yikqb")
metadata/_edit_lock_ = true

[node name="DragButton" type="Button" parent="." node_paths=PackedStringArray("drag_node")]
modulate = Color(1, 1, 1, 0)
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_right = 128.0
offset_bottom = 128.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_xqv6w")
drag_node = NodePath("../Circle128p")
metadata/_edit_lock_ = true

[connection signal="button_down" from="DragButton" to="." method="_on_drag_button_button_down"]
[connection signal="button_down" from="DragButton" to="DragButton" method="_on_button_down"]
[connection signal="button_up" from="DragButton" to="." method="_on_drag_button_button_up"]
[connection signal="button_up" from="DragButton" to="DragButton" method="_on_button_up"]
[connection signal="mouse_entered" from="DragButton" to="DragButton" method="_on_mouse_entered"]
[connection signal="mouse_exited" from="DragButton" to="DragButton" method="_on_mouse_exited"]
